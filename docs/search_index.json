[["index.html", "Technical Manual for Data Injection into the GloSIS Database 1 Introduction 1.1 System Requirements", " Technical Manual for Data Injection into the GloSIS Database Luis Rodríguez Lado, Eloi Ribeiro, Marcos Angelini 2025-03-13 1 Introduction The Global Soil Information System (GloSIS) is a key initiative under the Global Soil Partnership (GSP), designed to integrate and standardize soil data globally. However, soil information is often scattered across paper reports, scientific articles, and national archives, making it difficult to access, compare, and utilize effectively. Additionally, variability in laboratory analytical procedures, sampling methods, and classification systems leads to inconsistencies that hinder accurate global assessments. Harmonization is essential to standardize data formats, analytical methods, and reporting frameworks, ensuring comparability, accessibility, and reliability. To address these challenges, the GloSIS database is structured as a harmonized relational database in PostgreSQL, following ISO 28258 standards for soil data storage. However, its complexity can pose difficulties for users unfamiliar with SQL or PostgreSQL programming, making it challenging to convert existing soil data into this standardized format. This Technical Manual provides guidance on implementing a PostgreSQL database aligned with the GloSIS schema and introduces the glosis-shiny service—a tool designed to simplify the conversion of soil data into the GloSIS format. By automating and harmonizing data integration, this application streamlines the workflow, making the process accessible to users without advanced SQL expertise. This step is crucial for building the GloSIS infrastructure, ensuring that soil data from various sources can be shared, compared, and utilized effectively on a global scale. This document provides a detailed technical manual on setting up two Docker-based services: 1) PostgreSQL database, and 2) R Shiny application for soil data injection and visualization of soil data. It covers the installation and deployment of the applications using Docker, the process of data preparation for the - Database configuration and credentials - Data injection workflow from Excel (xlsx) files - Explanation of the fill_tables.R script 1.1 System Requirements Docker Desktop installed R and RStudio installed (for local debugging) PostgreSQL with PostGIS extension This document uses three soils profiles from undisturbed forests from the PhD dissertation Soils,water and nutrients in a forest ecosystem in Suriname (Poels 1987), available at https://edepot.wur.nl/202240, as an example for soil data harmonization. References "],["installation-and-setup.html", "2 Installation and Setup 2.1 Installing Docker Desktop 2.2 Setting Up the GloSIS Database and Shiny App 2.3 Deploying Services 2.4 Accessing the Services", " 2 Installation and Setup This section explains how to set up the necessary environment to run the GloSIS soil database injection application, including Docker, PostgreSQL with PostGIS. The installation process is fully containerized using Docker, which means all dependencies and configurations are pre-defined and work consistently across different systems. The system consists of two main components: a PostgreSQL database with PostGIS, which stores the soil data following the ISO 28258 standard, and a Shiny application, which allows users to inject structured Excel files into the database. These components are deployed together using Docker Compose, making the setup process straightforward and ensuring everything runs in a controlled environment. 2.1 Installing Docker Desktop Before proceeding with the installation, Docker Desktop must be installed. Docker is a tool that allows applications to run inside containers, ensuring they work the same way on any system. To install it, go to the official Docker Desktop website and download the version appropriate for your operating system. After installation, start Docker Desktop and verify that it is running by opening a terminal (or command prompt) and running: docker --version If the installation was successful, you should see an output displaying the installed version of Docker, such as: Docker version 20.10.21, build baeda1f If Docker is running correctly, you are now ready to set up the GloSIS services. 2.2 Setting Up the GloSIS Database and Shiny App The database and the Shiny app are deployed using Docker Compose, which automates the process of downloading and running multiple containers. Instead of installing PostgreSQL, PostGIS, and the Shiny app separately, all configurations are predefined in a docker-compose.yml file, which allows both services to start together with a single command. The docker-compose.yml file defines the two services required for this project: The PostgreSQL database, which includes PostGIS extensions and is configured to store soil data. The Shiny web application, which provides a graphical interface for injecting data into the database. Below is the content of docker-compose.yml, which you will use to deploy the system: services: postgis: image: luislado/glosis-postgis:latest # Pre-configured PostgreSQL database container_name: glosis-db restart: always environment: DB_HOST: postgis DB_PORT: 5432 DB_NAME: postgres DB_USER: postgres DB_PASSWORD: glosis POSTGRES_PASSWORD: glosis ports: - &quot;5442:5432&quot; # Makes the database accessible from your machine volumes: - ./data/postgis:/var/lib/postgresql/data # Persistent database storage - ./init-scripts:/docker-entrypoint-initdb.d # Schema initialization scripts networks: - glosis-net shinyapp: image: luislado/glosis-shiny:latest # Shiny app for data injection container_name: glosis-shiny restart: always environment: USER: shiny PASSWORD: shiny DB_HOST: postgis DB_PORT: 5442 DB_NAME: postgres DB_USER: postgres DB_PASSWORD: glosis ports: - &quot;3838:3838&quot; # Allows access to the web interface volumes: - ./init-scripts:/srv/shiny-server/init-scripts # Shiny app scripts depends_on: - postgis # Ensures PostgreSQL starts before the Shiny app networks: - glosis-net networks: glosis-net: driver: bridge name: glosis-net This configuration does several things. It creates a network (glosis-net) that allows both services to communicate. It ensures that the database (glosis-db) is available before starting the Shiny app (glosis-shiny). It also maps port 5442 for PostgreSQL, so it can be accessed from outside the container, and port 3838 for the Shiny app, allowing users to interact with it via a web browser. Additionally, two new folder are created in you installation directory: 1. /data/postgis that will store the database outside the glosis-db container, and 2. /init-scripts/ that stores the newest version of the GloSIS database schemas (.sql) and additional outputs from running the glosis-shiny application. This ensures that both the database and outputs are stored outside the containers, preventing data loss when the system is restarted. 2.3 Deploying Services Once the docker-compose.yml file is in place, you can proceed with launching the system. First, open a terminal and navigate to the directory where you saved the docker-compose.yml file: cd /path/to/docker-compose-directory Then, start the containers by running: docker-compose up -d This command will: Download the necessary container images (if they are not already present). Create and run the PostgreSQL database and Shiny app. Ensure that the services run in the background (-d flag for “detached mode”). The first time you run this command, the process may take a few minutes as Docker downloads the required images. To check whether the containers are running correctly, open the Docker Desktop graphical interface (Figure 2.1). Figure 2.1: Docker-desktop graphical interface. Note that, in Figure 2.1, both the project and services icons are in green colour. If some of the services fails from running, either the service icon or the project icon appear in orange color (Figure 2.2). Figure 2.2: Docker-desktop graphical interface with shiny container not running. You can also verify that docker containers are running correctly typing: docker ps If everything is working, you should see output similar to the following: CONTAINER ID IMAGE STATUS PORTS 973bf939 luislado/glosis-shiny:latest Up 2 minutes 0.0.0.0:3838-&gt;3838/tcp 4fd00c73 luislado/glosis-postgis:latest Up 2 minutes 0.0.0.0:5442-&gt;5432/tcp If at any point you need to stop the services, use: docker-compose down This command stops and removes the running containers, but your database data remains intact because it is stored in the data/postgis directory. 2.4 Accessing the Services Once the containers are running, you can access the services as follows: The PostgreSQL database is available at localhost:5442. You can connect to it using tools like pgAdmin, DBeaver, or directly from R using the DBI package. The glosis-shiny app can be accessed from your web browser by navigating to: http://localhost:3838/ This will open the graphical interface where you can upload and inject soil data into PostgreSQL from structured Excel files (Figure 2.3). Figure 2.3: Graphical interface for the `glosis-shiny’ service. "],["glosis-database.html", "3 GloSIS Database 3.1 GloSIS Database Configuration 3.2 Database Credentials 3.3 Database Schema", " 3 GloSIS Database This section provides details on the GloSIS database in PostgreSQL. 3.1 GloSIS Database Configuration 3.2 Database Credentials The connection to PostgreSQL requires the specification of the . The application defines default values for Database Credentials. These are stored in credentials.R and used by the glosis-shiny application: database_name &lt;- &quot;postgres&quot; host_name &lt;- &quot;postgis&quot; port_number &lt;- &quot;5432&quot; user_name &lt;- &quot;postgres&quot; password_name &lt;- &quot;glosis&quot; 3.3 Database Schema The database schema follows ISO 28258 (GloSIS) standards. The main tables include: "],["data-preparation.html", "4 Data preparation 4.1 Understanding the XLSX Template 4.2 Plot Data Sheet 4.3 Specimen Data Sheet 4.4 Procedures Sheet 4.5 Codelist Sheet", " 4 Data preparation The GloSIS database is structured as a complex relational PostgreSQL database. Its intricate design can pose challenges for users who are not familiar with SQL or PostgreSQL programming, making it difficult to directly translate soil data into this format. The primary objective of the glosis-shiny application is to facilitate the conversion of soil data from an easy to read and compile format, into a standardized PostgreSQL database format for integration with the GloSIS platform. By automating and harmonizing the data injection into the PostgreSQL database, the application significantly streamlines the workflow, making it more accessible for users without advanced technical expertise. This step is crucial in building the GloSIS infrastructure, as it ensures that soil data from different sources can be shared and compared effectively. The data injection is performed thought a standardized Excel (.xlsx) template that serves as an intermediary format for structuring soil data before its integration into the PostgreSQL database. This template ensures that the data follows a predefined schema, aligning with the complex relational structure of the GloSIS database. The template consists of multiple sheets, each corresponding to a specific data entity, such as site information, soil horizons/layers, laboratory procedures, and analytical results structured in different sheets. Each column in these sheets is carefully labeled to match the expected database fields, reducing errors and ensuring data consistency. Users are required to fill in the template while adhering to specific data formats, such as numeric values for measurements, categorical values for predefined classifications, and geospatial coordinates in standard longitude and latitude formats. The structured nature of the template minimizes manual intervention and ensures that data is correctly mapped when it is processed by the glosis-shiny application. The application validates the input, identifies potential discrepancies, and harmonizes the dataset before transferring it into PostgreSQL, ultimately simplifying the data submission process while maintaining accuracy and comparability. The data in the standardized Excel template must be collected in a harmonized manner to ensure consistency and accuracy during integration into the GloSIS database. This requires harmonization of spatial coordinates to the EPSG:4326 coordinate system recorded in the Plot_Data sheet, ensuring homogeneous sample georeferencing. Additionally, the identification of standard soil property names, laboratory methods, and units of measurement must be correctly defined in the Procedures sheet. If the original data is recorded in different units, it must be converted to match the standardized units specified in the Procedures sheet before inclusion in the Specimen_Data sheet. Furthermore, all soil properties listed in the Specimen Data and Procedures sheets must correspond to those available in the Codelist sheet, which contains the standardized soil properties defined in the GloSIS codelist. Any property not included in the Codelist sheet must be removed from the template before data injection to ensure compatibility with the GloSIS database. This harmonization process is essential for maintaining data consistency, facilitating data sharing, and ensuring seamless integration with the global soil information system. 4.1 Understanding the XLSX Template The Excel file consists of multiple sheets that include the corresponding information to populate the different PostgreSQL GloSIS database tables: Plot Data: The Plot Data sheet contains essential information for describing the sampling locations and associated metadata. Specimen Data: This sheet contains soil information at the sample level, including laboratory analyses. Procedures: This sheet establishes the connection between measured soil properties, standardized soil property names, laboratory methods, and units of measurement, ensures consistency and interoperability between different soil datasets. Codelist: This sheet shows a compilation of all the standardized soil property names, laboratory methods, and units of measurement according to the GloSIS codelist for soil properties) The template (Figure 4.1) acts as a graphical interface where you can register your soil data. Figure 4.1: xlsx template. In the following sections, we provide a detailed overview of each of these sheets. 4.2 Plot Data Sheet The Plot Data sheet (Figure 4.2) provides information about the sampling site. It included the identification of the project in which the sample was collected (project_code), the identifiers for the sampling site (site_code), plot (plot_code) and the profile (profile_code). The plot_type column describes whether the sample has been collected using an auger (Borehole) of comes from an open profile (Pit). The n_layers column indicates the number of samples collected at different depths for a given site. This information is essential for populating the Specimen_Data sheet when using the script provided in this manual (Annex 1). The number of samples corresponds to the number of horizons or layers collected at each sampling point. For example, if a soil profile consists of three horizons and all horizons have been sampled, the n_layers value will be 3. Date registers the date when the survey was conducted. The date format for this column must be “YYYY-MM-DD”. The next columns refer to the georeference of the sample including latitude, longitude, and altitude, along with details on positional accuracy (positional_accuracy), spatial extent (extent), and the corresponding map sheet reference (map_sheet_code). The spatial coordinates latitude and longitude must be in geographic decimal degrees using the EPSG:4326 coordinate system. Figure 4.2: Information in the Plot_Data Tab. 4.3 Specimen Data Sheet The Specimen Data sheet (Figure 4.3) contains detailed soil information at the sample level, including data from each individual horizon or layer, their boundaries, and associated soil properties derived from laboratory analyses. For each sampled horizon or layer, the sheet includes unique identifiers for the profile, element, and specimen (profile_code,element_code,specimen_code). These identifiers should follow a structured naming convention, typically consisting of the soil profile name followed by a numeric sequence corresponding to the sampled horizon or layer. However, they can be freely named as long as they remain unique. The sheet also specifies the type of observation (Layeror Horizon), as well as the upper and lower depth boundaries (upper_depth, lower_depth). A Horizon refers to a genetically classified horizon in the soil profile, while a Layer represents a soil sample collected based on alternative criteria, such as a fixed depth interval rather than pedogenetic origin. Additionally, the sheet records the corresponding physical and chemical values of soil properties obtained from laboratory analyses, including pH, Soil Organic Carbon, clay content, and other relevant properties. Figure 4.3: Information in the Specimen Data sheet. 4.4 Procedures Sheet The Procedures sheet (Figure 4.4) establishes the connection between measured soil properties, standardized soil property names, laboratory methods, and units of measurement. It links the measured soil property names with their corresponding standardized identifiers (property_phys_chem_id) and incorporates information about the associated laboratory procedure identifier (procedure_phys_chem_id) and the standard unit of measurement (unit_of_measure_id) in the GloSIS standard Codelistsheet. The first column must contain the names of the measured soil properties for each sample, and must follow the sequence of soil properties included in the Specimen Data. The second, third, and fourth columns provide information on the standardized property names, laboratory methods, and units of measurement, respectively. The Procedures sheet facilitates accurate comparisons across datasets, allowing users to trace how each soil property was measured and in which units the results are reported. If soil measurements were recorded in units different from the standard, they must be converted to the harmonized units of measurement before entering the data in the Specimen Data sheet. This structured approach enhances data harmonization within the GloSIS framework. Figure 4.4: Information in the Procedures sheet. 4.5 Codelist Sheet The Codelist sheet (Figure 4.5) contains a comprehensive list of standardized soil property names (property_phys_chem_id), laboratory methods (procedure_phys_chem_id), and units of measurement (unit_of_measure_id), as defined in the current GloSIS codelist for soil properties. This standardized framework ensures uniformity in data representation and provides the foundation for accurately populating the Procedures sheet. Only soil properties listed in the Codelist sheet can be incorporated into the PostgreSQL GloSIS Database. Any measured soil property, method or unit that is not present in this standardized list cannot be uploaded and must be removed from both the Specimen Data and Procedures sheets before data injection. This requirement ensures the harmonization of soil datasets and maintains data interoperability within the GloSIS framework. However, the codelist is continuously updated to incorporate new soil analytical properties, laboratory methods, and measurement units, enhancing the system’s capacity for integrating diverse soil datasets. Figure 4.5: Properties, methods and units of measurement in the Codelist sheet Ensuring the correct utilization of the template is essential for the successful execution of the data injection process. Proper adherence to the template structure guarantees data integrity, compatibility, and seamless integration into the PostgreSQL GloSIS Database. "],["exercise-on-data-preparation.html", "5 Exercise on data preparation 5.1 Filling out the plot data sheet 5.2 Filling out the specimen data sheet 5.3 Filling out the procedures data sheet 5.4 Special Considerations:", " 5 Exercise on data preparation The example presented in this section uses data from three soil profiles from undisturbed forests in Suriname (Poels 1987) collected with a soil auger: one Orthic Ferralsol (Profile 35, 8 horizons) and two Xanthic Ferralsols (Profiles 36 and 37, 9 horizons each). This data requires harmonization in coordinate systems, dates, soil properties, and laboratory methods before being included in the GloSIS database. For simplification, only analytical data for selected soil parameters have been included in this exercise. 5.1 Filling out the plot data sheet All soil profiles have been collected within the same project. The project_name column for all profiles is set to LH/UvS_01. The profile_code attribute follows the names of the soil profiles in the original document. site_code and plot_code inform about the location of the sample. In this case site_code has been set to the district (Para) and site_code to the protected area of Kabo, where all samples were collected. Since the samples were collected with an auger, the plot_type attribute must be set to borehole The available options are borehole for auger sampling and pit if an open pit was excavated. For each soil sampling point, the n_layers attribute correspond to the number of horizons/layers collected at that point. In this case, n_layers is equal to the number of horizons sampled by profile. The date format in the original document follows the *DD Month YYYY* format (e.g., 27 May 1983). This format must be converted to *YYYY-MM-DD* (1983-05-27), which is the standard format accepted by the GloSIS database. The original coordinates of the points were expressed in degrees and minutes, using a central point as a reference (5°15’N, 55°43’W) and including displacement information in meters. Additionally, the coordinate system (EPSG) was not defined. We estimated the coordinates for each soil sampling point, using the information provided, in relation to the EPSG::4326 coordinate system (see Table 5.1). No corrections were necessary for altitude. The positional accuracy was estimated at 1850 m. Table 5.1: Table 1: Harmonized data for the plot data sheet for the exercise data. project_name site_code plot_code profile_code plot_type n_layers date longitude latitude altitude positional_accuracy extent map_sheet_code LH/UvS_01 Para Kabo Profile35 Borehole 8 1983-05-27 -55.7148 5.25 20 1850 LH/UvS_01 Para Kabo Profile36 Borehole 9 1978-08-10 -55.7166 5.25 27 1850 LH/UvS_01 Para Kabo Profile37 Borehole 9 1983-06-02 -55.7131 5.25 39 1850 The extent column refers to a surface plot. In this example, the samples are points, so no information on extent is applicable. The columns altitude, positional accuracy and map_sheet_code are optional. 5.2 Filling out the specimen data sheet The specimen data sheet contains information for each soil sample collected at each soil sampling location. The number of rows must therefore be equal to the total number of horizons/layers at each sampling location (n_layers). In this example, the total number of rows in this sheet is 26. Two different types of data are required in this sheet. First, the columns profile_code, element_code, type, order_element, upper_depth, lower_depth, and specimen_code serve as identifiers for samples, sample types, and soil depths. The remaining columns correspond to soil properties measured through laboratory analyses. The profile_code column references the same attribute from the previous sheet and must contain repetitions corresponding to the number of horizons collected at each sampling location. The order_element column is a sequential number that increases from top to bottom horizons, starting from 1. The element_code is generated by combining the profile_code and order_element to create a unique identifier for each horizon. The type attribute is set to Horizon for genetic soil horizons. If the sample is not collected based on pedogenetic criteria but is defined by specific boundaries, the option Layer is used. The upper_depth and lower_depth columns specify the depth range (in cm) of each horizon or layer within the soil profile. Except for the top horizon, the upper_depth value of each horizon must match the lower_depth value of the preceding horizon within the same profile. The specimen_code is an alphanumeric string that uniquely identifies each soil sample. In this case, the same value as element_code has been used for consistency. Table 5.2: Sample descriptors in the specimen data sheet for the exercise data. profile_code element_code type order_element upper_depth lower_depth specimen_code Profile35 Profile35_1 Horizon 1 0 4 Profile35_1 Profile35 Profile35_2 Horizon 2 4 9 Profile35_2 Profile35 Profile35_3 Horizon 3 9 24 Profile35_3 Profile35 Profile35_4 Horizon 4 24 50 Profile35_4 Profile35 Profile35_5 Horizon 5 50 66 Profile35_5 Profile35 Profile35_6 Horizon 6 66 104 Profile35_6 Profile35 Profile35_7 Horizon 7 104 134 Profile35_7 Profile35 Profile35_8 Horizon 8 134 170 Profile35_8 Profile36 Profile36_1 Horizon 1 0 3 Profile36_1 Profile36 Profile36_2 Horizon 2 3 10 Profile36_2 Profile36 Profile36_3 Horizon 3 10 27 Profile36_3 Profile36 Profile36_4 Horizon 4 27 48 Profile36_4 Profile36 Profile36_5 Horizon 5 48 63 Profile36_5 Profile36 Profile36_6 Horizon 6 63 87 Profile36_6 Profile36 Profile36_7 Horizon 7 87 102 Profile36_7 Profile36 Profile36_8 Horizon 8 102 130 Profile36_8 Profile36 Profile36_9 Horizon 9 130 180 Profile36_9 Profile37 Profile37_1 Horizon 1 0 4 Profile37_1 Profile37 Profile37_2 Horizon 2 4 15 Profile37_2 Profile37 Profile37_3 Horizon 3 15 24 Profile37_3 Profile37 Profile37_4 Horizon 4 24 41 Profile37_4 Profile37 Profile37_5 Horizon 5 41 52 Profile37_5 Profile37 Profile37_6 Horizon 6 52 87 Profile37_6 Profile37 Profile37_7 Horizon 7 87 112 Profile37_7 Profile37 Profile37_8 Horizon 8 112 143 Profile37_8 Profile37 Profile37_9 Horizon 9 143 180 Profile37_9 The parameters for soil properties must include, for each property, its measured value in the laboratory using the harmonized units of measurement defined in GloSIS, as specified in the observation_phys_chem_id column of the template. Any value reported in different units MUST be converted to the harmonized units before being entered into this sheet. Values that fall outside the predefined lower and upper thresholds in the database will be excluded, preventing full population of the database. Table 5.3: Analytical properties in the specimen data sheet for the exercise data. Sand Silt Clay C N pH_H2O pH_KCl CEC Ca Mg K Na Al ECEC K_total P_total P_Bray_I Bulk_Density pF_2 83.5 13.6 2.9 11.7 0.8 4.0 3.3 26.0 1.25 1.15 0.4 0.2 1.2654 9.2 0.0513 0.0032 2e-04 NA NA 76.2 17.6 6.3 12.0 0.9 3.7 3.4 28.4 0.40 0.50 0.3 0.5 4.1292 15.0 0.0615 0.0049 2e-04 1.41 23.2 68.5 17.9 13.6 8.2 0.6 4.4 3.8 23.2 0.15 0.25 0.1 0.3 3.9294 13.0 0.0615 0.0054 1e-04 1.28 22.4 63.8 18.8 17.6 5.6 0.4 4.8 4.0 22.8 0.15 0.15 0.1 0.2 4.0959 13.2 0.0769 0.0047 1e-04 1.56 25.2 62.8 14.2 23.1 2.5 0.2 4.8 3.8 14.4 0.15 0.10 0.0 0.2 2.9970 9.7 0.0872 0.0052 0e+00 1.60 26.0 64.2 12.4 23.6 1.4 0.3 4.8 4.0 12.2 0.15 0.05 0.0 0.1 2.5641 8.2 0.0769 0.0049 1e-04 1.65 25.9 62.3 12.5 25.4 0.7 0.1 5.0 4.0 10.8 0.00 0.00 0.1 0.0 2.2977 7.0 0.1026 0.0037 1e-04 1.69 27.1 58.1 14.3 27.8 0.6 0.1 5.0 4.1 9.8 0.15 0.00 0.0 0.1 2.2311 7.1 0.0872 0.0037 1e-04 1.69 29.7 75.2 21.7 3.2 15.2 1.1 4.0 3.8 34.8 2.30 0.50 0.6 0.7 2.3643 14.0 0.1051 0.0054 2e-04 1.38 NA 75.6 16.4 8.0 8.6 0.8 4.0 3.6 26.6 0.30 0.25 0.3 0.3 3.6630 12.7 0.1513 0.0060 1e-04 1.47 20.4 5.3 Filling out the procedures data sheet The first column in the Procedures sheet MUST contain all soil analytical properties included in the specimen data and in the same order of entrance. The proper GloSIS names for soil properties, analysis methods and units MUST be defined for each soil property using the data provided in the observation_phys_chem_id sheet. The first column in the Procedures sheet MUST include all soil analytical properties listed in the specimen data sheet, maintaining the same order of entry. The correct GloSIS names for soil properties, analysis methods, and units MUST be assigned to each soil property using the data provided in the observation_phys_chem_id sheet. Properties that are not listed in the observation_phys_chem_id sheet are not allowed. Table 5.4: Soil Property Mapping Table for the exercise data soil_property property_phys_chem_id procedure_phys_chem_id unit_of_measure_id Sand (%) Sand texture fraction SaSiCl_2-20-2000u-disp-pipette % Silt (%) Silt texture fraction SaSiCl_2-20-2000u-disp-pipette % Clay (%) Clay texture fraction SaSiCl_2-20-2000u-disp-pipette % C (%) Carbon (C) - organic OrgC_wc-cro3-walkleyblack g/kg N (%) Nitrogen (N) - total TotalN_kjeldahl g/kg pH-H₂O pH - Hydrogen potential pHH2O pH pH-KCl pHProperty pHKCl pH CEC (me/100g) cationExchangeCapacitySoil CEC_ph7-nh4oac cmol/kg Ca (me/100g) Calcium (Ca++) - exchangeable ExchBases_ph7-nh4oac cmol/kg Mg (me/100g) Magnesium (Mg++) - exchangeable ExchBases_ph7-nh4oac cmol/kg K (me/100g) Potassium (K+) - exchangeable ExchBases_ph7-nh4oac cmol/kg Na (me/100g) Sodium (Na+) - exchangeable ExchBases_ph7-nh4oac cmol/kg Al (me/100g) Aluminium (Al+++) - exchangeable ExchBases_ph7-nh4oac cmol/kg ECEC (me/100g) effectiveCecProperty EffCEC_calcul-ba cmol/kg K total (ppm) Potassium (K) - total Total_h2so4 cmol/kg P total (ppm) Phosphorus (P) - total Total_h2so4 % P-Bray I (ppm) Phosphorus (P) - extractable Extr_hcl-nh4f-bray1 % Bulk Density (kg/l) bulkDensityFineEarthProperty BlkDensF_fe-unkn kg/dm3 pF 2 (%) Available water capacity - volumetric (FC to WP) PAWHC_calcul-fc100wp m3/100 m3 This table ensures that all soil properties are named according to the GloSIS standard and that he corresponding methods and units are correctly defined 5.4 Special Considerations: Any soil property value that is missing MUST be left empty in the .xlsx template. Entries such as NA, nodata, -, etc., are not permitted. Ensure that all numeric values are correctly formatted as numbers in the template. Any alphanumeric entry in a numeric column will cause the entire column to be treated as alphanumeric. Special characters such as *, /, ?, etc., are not allowed. This includes the &lt; symbol, commonly used for values below the detection limit of analytical equipment. In such cases, either leave the value empty or replace it by dividing the detection limit by a factor of two. All soil properties that are not listed in the observation_phys_chem_id MUST be removed from the analysis. They cannot be included in either the specimen data or the Procedures sheets. If they are left in these sheets, the database will not be correctly populated. References "],["data-injection-into-the-glosis-database.html", "6 Data injection into the GloSIS database 6.1 Create a new database 6.2 Data injection 6.3 Delete an existing database", " 6 Data injection into the GloSIS database The translation of soil data into the GloSIS database has been fully automated within the glosis-shiny application. The steps to complete this process include creating a database to store the data and selecting a soil data .xlsx file that meets the requirements outlined in the previous section. Errors in this step are exclusively linked to improper data formatting in the .xlsx file. In such cases, please review the .xlsx file to identify any mistakes made during its preparation. When creating a new database, the system connects to the GloSIS GitHub repository to obtain the latest stable version of the database (ISO_28258_v_stable.sql) and uses it to generate an empty template for populating the data. During this process, the ISO_28258_v_stable.sql file is stored in the init-scripts folder within the working directory. Details on using the application for data injection are presented in the following sections of this chapter. 6.1 Create a new database Open the glosis-shiny application in your web browser at http://localhost:3838/iso28258/. This site will display the main window of the application. The window contains a SELECT DATABASE dropdown menu listing all existing databases in the system (empty if running for the first time), a Connect button to connect to the selected database, a New Database button to create a new database, and a Remove button to delete an existing database. The first step is to create a new database to store the soil data using the New Database button (Figure 6.1). Figure 6.1: Creation of a new database. A dialog window will pop up asking for the database name (Figure 6.2). Enter a name in the field and click the Confirm button. A message will appear asking for and administrative password. Leave this option empty and click Confirm. Figure 6.2: Name the database. A new message in green will appear in the sidebar, indicating that the database has been successfully created (Figure 6.3). If the database already exists, the message will indicate this as well. Figure 6.3: Name the database. The new database will be stored in the data folder within the working directory and will become available in the SELECT DATABASE dropdown menu. 6.2 Data injection Select the database to be filled from the SELECT DATABASE dropdown menu and click on the Connect button. At this point, the main body of the application will display the column names for each table, but the records will still be empty. If the database already contains data, the tables will show the previously inserted records. A new section, INJECT DATA (.xlsx), will appear in the sidebar. This section includes a Browse button to select the .xlsx file containing the data to be inserted into the database. Click this button to choose the .xlsx file, then click the Use button. The file will be uploaded and injected into the database. A message will appear indicating that the data is being processed for inclusion in the database (Figure 6.4). Figure 6.4: Message indicating data is being processed for injection into the database. Once the process is complete, the database will display the data for each table (Figure 6.5). Figure 6.5: GloSIS database populated showing the records for the table of physic and chemical analytical results. The database can be now accessed from other applications and updated with new record using the same glosis-shiny application. 6.3 Delete an existing database Databases can also be deleted using this application. However, database deletion should be performed with caution and requires security confirmation, such as a password. For educational purposes, the password is left blank by default, but it can be changed for development purposes. The Delete button is only available when disconnected from databases. To delete a database, select the database to remove from the SELECT DATABASE menu and click the Delete button. After confirmation (Figure 6.6), the database will be permanently removed. Figure 6.6: Deletion of a database. "],["visualization.html", "7 Visualization 7.1 View Data on the Dashboard 7.2 View data on the Data Viewer App", " 7 Visualization Two visualization tools are included in this app: a Dashboard viewer and a Data Viewer application in Shiny. Both are designed to display data from the GloSIS database in a user-friendly format, and the Data Viewer also allows the export of soil data points to .csv, .xlsx, and the clipboard. 7.1 View Data on the Dashboard The first visualization tool is a dashboard generated in .html format. This dashboard is useful for verifying whether the data has been correctly updated in the database, identifying potential errors in positioning, and detecting data outliers. The file contains all selected data from the GloSIS database, which may result in a large file size depending on the number of records. A Create Dashboard button appears after populating the GloSIS database with soil data (Figure 7.1). Figure 7.1: Create Dashboard button on the left panel of the data injection app. Clicking this button generates a .html file stored in the init-scripts folder within the working directory, using the same name as the database. The application then renders the file, and a new button,Go to Dashboard, will appear (Figure 7.2). Figure 7.2: Go to Dashboard button in green color. Clicking this button opens a .htmlformat file in a new tab displaying soil data in three sections (Figure 7.3): Location – Contains details about the position of the soil data points. Attributes – Data on soil properties. Boxplot – Data with value bars showing the distribution of soil properties across profiles and depths for quick visual comparisons. Figure 7.3: Visualization of the soil data in the dashboard.. Tables and the map are internally linked, allowing users to select specific soils either on the map or in the tables, with their location and attributes automatically filtered. The Make a selection button on the map can be used for this task when selecting directly from the map (Figure 7.4). Figure 7.4: Boxplot visualization of filtered soil data attributes. 7.2 View data on the Data Viewer App The second visualization tool is accessible via the Go to Data Viewer button (Figure 7.5) at the bottom of the glosis-shiny app. Clicking this button opens a new tab (Figure 7.5) with a dropdown menu listing available databases. These databases are those previously created within the glosis-shiny app. The button Go to GloSIS database brings you back to the glosis-shiny app for data injection. Figure 7.5: Visualization app. After selecting a database, clicking Connect displays the soil data both in a tabular format and as a map showing the locations of soil samples (Figure 7.6). Figure 7.6: Visualization app showing soil data from the selected database. Similar to the dashboard, this tool is designed primarily for data verification and correction. In this app, soil data can be exported to other file formats. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
